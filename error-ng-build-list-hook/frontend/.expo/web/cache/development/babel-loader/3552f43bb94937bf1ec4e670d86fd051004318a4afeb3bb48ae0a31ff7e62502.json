{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(_this, derived, args) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n      return !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    } catch (e) {\n      return false;\n    }\n  }\n  derived = _getPrototypeOf(derived);\n  return _possibleConstructorReturn(_this, isNativeReflectConstruct() ? Reflect.construct(derived, args || [], _getPrototypeOf(_this).constructor) : derived.apply(_this, args));\n}\nimport AnimatedInterpolation from \"./AnimatedInterpolation\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport AnimatedWithChildren from \"./AnimatedWithChildren\";\nvar AnimatedDiffClamp = function (_AnimatedWithChildren) {\n  _inherits(AnimatedDiffClamp, _AnimatedWithChildren);\n  function AnimatedDiffClamp(a, min, max) {\n    var _this;\n    _classCallCheck(this, AnimatedDiffClamp);\n    _this = _callSuper(this, AnimatedDiffClamp);\n    _this._a = a;\n    _this._min = min;\n    _this._max = max;\n    _this._value = _this._lastValue = _this._a.__getValue();\n    return _this;\n  }\n  _createClass(AnimatedDiffClamp, [{\n    key: \"__makeNative\",\n    value: function __makeNative() {\n      this._a.__makeNative();\n      _get(_getPrototypeOf(AnimatedDiffClamp.prototype), \"__makeNative\", this).call(this);\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(config) {\n      return new AnimatedInterpolation(this, config);\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      var value = this._a.__getValue();\n      var diff = value - this._lastValue;\n      this._lastValue = value;\n      this._value = Math.min(Math.max(this._value + diff, this._min), this._max);\n      return this._value;\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      this._a.__addChild(this);\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      this._a.__removeChild(this);\n      _get(_getPrototypeOf(AnimatedDiffClamp.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      return {\n        type: 'diffclamp',\n        input: this._a.__getNativeTag(),\n        min: this._min,\n        max: this._max\n      };\n    }\n  }]);\n  return AnimatedDiffClamp;\n}(AnimatedWithChildren);\nexport default AnimatedDiffClamp;","map":{"version":3,"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_get","_getPrototypeOf","_inherits","_callSuper","_this","derived","args","isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","e","constructor","apply","AnimatedInterpolation","AnimatedNode","AnimatedWithChildren","AnimatedDiffClamp","_AnimatedWithChildren","a","min","max","_a","_min","_max","_value","_lastValue","__getValue","key","value","__makeNative","interpolate","config","diff","Math","__attach","__addChild","__detach","__removeChild","__getNativeConfig","type","input","__getNativeTag"],"sources":["C:/Users/HP/generated/react-test/zynerator-react-angular-build-prod/error-ng-build-list-hook/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedDiffClamp.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nclass AnimatedDiffClamp extends AnimatedWithChildren {\n  constructor(a, min, max) {\n    super();\n    this._a = a;\n    this._min = min;\n    this._max = max;\n    this._value = this._lastValue = this._a.__getValue();\n  }\n\n  __makeNative() {\n    this._a.__makeNative();\n\n    super.__makeNative();\n  }\n\n  interpolate(config) {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  __getValue() {\n    var value = this._a.__getValue();\n\n    var diff = value - this._lastValue;\n    this._lastValue = value;\n    this._value = Math.min(Math.max(this._value + diff, this._min), this._max);\n    return this._value;\n  }\n\n  __attach() {\n    this._a.__addChild(this);\n  }\n\n  __detach() {\n    this._a.__removeChild(this);\n\n    super.__detach();\n  }\n\n  __getNativeConfig() {\n    return {\n      type: 'diffclamp',\n      input: this._a.__getNativeTag(),\n      min: this._min,\n      max: this._max\n    };\n  }\n\n}\n\nexport default AnimatedDiffClamp;"],"mappings":"AASA,YAAY;;AAAC,OAAAA,eAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,0BAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,SAAA;AAAA,SAAAC,WAAAC,KAAA,EAAAC,OAAA,EAAAC,IAAA;EAAA,SAAAC,yBAAA;IAAA,WAAAC,OAAA,qBAAAA,OAAA,CAAAC,SAAA;IAAA,IAAAD,OAAA,CAAAC,SAAA,CAAAC,IAAA;IAAA,WAAAC,KAAA;IAAA;MAAA,QAAAC,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAP,OAAA,CAAAC,SAAA,CAAAG,OAAA;IAAA,SAAAI,CAAA;MAAA;IAAA;EAAA;EAAAX,OAAA,GAAAJ,eAAA,CAAAI,OAAA;EAAA,OAAAN,0BAAA,CAAAK,KAAA,EAAAG,wBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAJ,OAAA,EAAAC,IAAA,QAAAL,eAAA,CAAAG,KAAA,EAAAa,WAAA,IAAAZ,OAAA,CAAAa,KAAA,CAAAd,KAAA,EAAAE,IAAA;AAAA;AAEb,OAAOa,qBAAqB;AAC5B,OAAOC,YAAY;AACnB,OAAOC,oBAAoB;AAA+B,IAEpDC,iBAAiB,aAAAC,qBAAA;EAAArB,SAAA,CAAAoB,iBAAA,EAAAC,qBAAA;EACrB,SAAAD,kBAAYE,CAAC,EAAEC,GAAG,EAAEC,GAAG,EAAE;IAAA,IAAAtB,KAAA;IAAAP,eAAA,OAAAyB,iBAAA;IACvBlB,KAAA,GAAAD,UAAA,OAAAmB,iBAAA;IACAlB,KAAA,CAAKuB,EAAE,GAAGH,CAAC;IACXpB,KAAA,CAAKwB,IAAI,GAAGH,GAAG;IACfrB,KAAA,CAAKyB,IAAI,GAAGH,GAAG;IACftB,KAAA,CAAK0B,MAAM,GAAG1B,KAAA,CAAK2B,UAAU,GAAG3B,KAAA,CAAKuB,EAAE,CAACK,UAAU,CAAC,CAAC;IAAC,OAAA5B,KAAA;EACvD;EAACN,YAAA,CAAAwB,iBAAA;IAAAW,GAAA;IAAAC,KAAA,EAED,SAAAC,aAAA,EAAe;MACb,IAAI,CAACR,EAAE,CAACQ,YAAY,CAAC,CAAC;MAEtBnC,IAAA,CAAAC,eAAA,CAAAqB,iBAAA,CAAAT,SAAA,yBAAAE,IAAA;IACF;EAAC;IAAAkB,GAAA;IAAAC,KAAA,EAED,SAAAE,YAAYC,MAAM,EAAE;MAClB,OAAO,IAAIlB,qBAAqB,CAAC,IAAI,EAAEkB,MAAM,CAAC;IAChD;EAAC;IAAAJ,GAAA;IAAAC,KAAA,EAED,SAAAF,WAAA,EAAa;MACX,IAAIE,KAAK,GAAG,IAAI,CAACP,EAAE,CAACK,UAAU,CAAC,CAAC;MAEhC,IAAIM,IAAI,GAAGJ,KAAK,GAAG,IAAI,CAACH,UAAU;MAClC,IAAI,CAACA,UAAU,GAAGG,KAAK;MACvB,IAAI,CAACJ,MAAM,GAAGS,IAAI,CAACd,GAAG,CAACc,IAAI,CAACb,GAAG,CAAC,IAAI,CAACI,MAAM,GAAGQ,IAAI,EAAE,IAAI,CAACV,IAAI,CAAC,EAAE,IAAI,CAACC,IAAI,CAAC;MAC1E,OAAO,IAAI,CAACC,MAAM;IACpB;EAAC;IAAAG,GAAA;IAAAC,KAAA,EAED,SAAAM,SAAA,EAAW;MACT,IAAI,CAACb,EAAE,CAACc,UAAU,CAAC,IAAI,CAAC;IAC1B;EAAC;IAAAR,GAAA;IAAAC,KAAA,EAED,SAAAQ,SAAA,EAAW;MACT,IAAI,CAACf,EAAE,CAACgB,aAAa,CAAC,IAAI,CAAC;MAE3B3C,IAAA,CAAAC,eAAA,CAAAqB,iBAAA,CAAAT,SAAA,qBAAAE,IAAA;IACF;EAAC;IAAAkB,GAAA;IAAAC,KAAA,EAED,SAAAU,kBAAA,EAAoB;MAClB,OAAO;QACLC,IAAI,EAAE,WAAW;QACjBC,KAAK,EAAE,IAAI,CAACnB,EAAE,CAACoB,cAAc,CAAC,CAAC;QAC/BtB,GAAG,EAAE,IAAI,CAACG,IAAI;QACdF,GAAG,EAAE,IAAI,CAACG;MACZ,CAAC;IACH;EAAC;EAAA,OAAAP,iBAAA;AAAA,EA7C6BD,oBAAoB;AAiDpD,eAAeC,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}